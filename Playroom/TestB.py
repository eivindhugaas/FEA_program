import numpy as np

from FEAFunctions.FEAFunctions import FEA as fea
fea=fea()
nodelocations=[3.25,0.,0.,  4.,0.,0.,  3.923141,0.780361,0.,  3.187552,0.634044,0.,  3.25,0.,1.,  4.,0.,1.,  3.923141,0.780361,1.,  3.187552,0.634044,1.]
nodelocations=[0,0,0, 1,0,0, 1,1,0,  0,1,0, 0,0,1 , 1,0,1, 1,1,1, 0,1,1] 
B,DetJ=fea.shapefunc(nodelocations=nodelocations,exi=0,eta=0,zeta=0)

#nodelocations=[-1.,-1.,-1.,  1.,-1.,-1.,  1.,1.,-1.,  -1.,1.,-1.,  -1.,-1.,1.,  1.,-1.,1.,  1.,1.,1.,  -1.,1.,1.]

nodedisp=[0.015820000000000167, 0.0, 0.0, 0.012889999999999624, 0.0, 0.0, 0.012648999999999688, 0.0025160000000000737, 0.0, 0.015507999999999633, 0.0030849999999998934, 0.0, 0.015820000000000167, 0.0, 0.0, 0.012889999999999624, 0.0, 0.0, 0.012648999999999688, 0.0025160000000000737, 0.0, 0.015507999999999633, 0.0030849999999998934, 0.0]
nodedisplacement=nodedisp 

nodedisplacement=[0.0,0.,0., 0.,0.1,0., 0.,0.1,0.,  0.0,0,0, 0.1,0.,0. , 0.1,0.1,0., 0.1,0.1,0., 0.1,0,0.]

nodedisplacement=[0.,0.,0., 0.,0.,0., 0.,0.,0.,  0.,0.,0., 0.1,0.,0. , 0.1,0.,0., 0.1,0.,0., 0.1,0.,0.]
nodedisplacement=[0.,0.,0., 0.1,0.,0., 0.1,0.,0.,  0.,0.,0., 0.,0.,0. , 0.1,0.,0., 0.1,0.,0., 0.,0.,0.]

Gausspoints=np.array([[-1./(3**0.5),-1./(3**0.5),-1./(3**0.5)] , [1./(3**0.5),-1./(3**0.5),-1./(3**0.5)]  ,   [1./(3**0.5),1./(3**0.5),-1./(3**0.5)],  [-1./(3**0.5),1./(3**0.5),-1./(3**0.5)], [-1./(3**0.5),-1./(3**0.5),1./(3**0.5)], [1./(3**0.5),-1./(3**0.5),1./(3**0.5)],   [1./(3**0.5),1./(3**0.5),1./(3**0.5)], [-1./(3**0.5),1./(3**0.5),1./(3**0.5)]])
w=1.

B,DetJ=fea.shapefunc(nodelocations=nodelocations,exi=0,eta=0,zeta=0)
e=B*(np.matrix(nodedisplacement).transpose())


for Gauss in Gausspoints:
    

    B,detJ=fea.shapefunc(nodelocations=nodelocations,exi=Gauss[0],eta=Gauss[1],zeta=Gauss[2])
    eu=B*(np.matrix(nodedisplacement).transpose())
    print(eu)